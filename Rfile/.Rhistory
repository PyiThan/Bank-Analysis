Bank=read.csv("~/Desktop/SFSU/math449Project/bank.csv",header=TRUE,sep=";")
library(ggplot2)
library(dplyr)
k
counts=bank%>%
group_by(job,y)%>%
summarise(count=n())
counts=Bank%>%
group_by(job,y)%>%
summarise(count=n())
counts
ggplot(counts, aes(x = job, y = count, fill = y)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Job") +
ylab("Count") +
ggtitle("Subscription Status by Job") +
theme_minimal()
#Create the side by side bar chart
ggplot(counts, aes(x = job, y = count, fill = y)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Job") +
ylab("Count") +
ggtitle("Subscription Status by Job") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#Create the side by side bar chart
ggplot(counts, aes(x = job, y = count, fill = y)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Job") +
ylab("Count") +
ggtitle("Subscription Status by Job") +
labs(fill = "Subscriptions") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#calculate the counts for each category
countsJob=Bank%>%
group_by(job,y)%>%
summarise(count=n())
#Create the side by side bar chart
ggplot(countsJob, aes(x = job, y = count, fill = y)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Job") +
ylab("Count") +
ggtitle("Subscription Status by Job") +
labs(fill = "Subscriptions") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#calculate the counts for each marital status
countsMarital=Bank%>%
group_by(marital,y)%>%
summarise(count=n())
#Create the side by side bar chart
ggplot(countsMarital, aes(x = marital, y = count, fill = y)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Job") +
ylab("Count") +
ggtitle("Subscription Status by Job") +
labs(fill = "Subscriptions") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#Scatter plot to visualize the relationship between age and y
ggplot(Bank, aes(x = age, y = y)) +
geom_point() +
xlab("Age") +
ylab("Subscription Status") +
ggtitle("Age vs. Subscription Status")
View(Bank)
Bank
# Calculate the subscription rate
bankSubscriptionRate=bank%>%
group_by(month) %>%
summarize(subscription_rate = sum(subscription == "yes") /n() * 100)
# Calculate the subscription rate
bankSubscriptionRate=Bank%>%
group_by(month) %>%
summarize(subscription_rate = sum(subscription == "yes") /n() * 100)
# Calculate the subscription rate
bankSubscriptionRate=Bank%>%
group_by(month) %>%
summarize(subscription_rate = sum(y == "yes") /n() * 100)
bankSubscriptionRate
data <- data[order(data$month), ]
Bank <- Bank[order(Bank$month), ]
# Reset the row names
row.names(Bank) <- NULL
Bank$month
# Convert the month column to a factor with the desired order
Bank$month=factor(Bank$month,levels=c("jan","feb","mar","apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec"))
Bank$month
Bank=read.csv("~/Desktop/SFSU/math449Project/bank.csv",header=TRUE,sep=";")
attach(Bank)
# Convert the month column to a factor with the desired order
Bank$month=factor(Bank$month,levels=c("jan","feb","mar","apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec"))
Bank$month
Bank=read.csv("~/Desktop/SFSU/math449Project/bank.csv",header=TRUE,sep=";")
unique(Bank$motnh)
unique(Bank$month)
Bank=read.csv("~/Desktop/SFSU/math449Project/bank.csv",header=TRUE,sep=";")
# Convert the month column to a factor with the desired order
Bank$month=factor(Bank$month,levels=c("jan","feb","mar","apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec"))
str(Bank)
# Sort the dataframe by the month column
Bank <- Bank[order_by(Bank,-month)]
# Reset the row names
row.names(Bank) <- NULL
# Calculate the subscription rate
bankSubscriptionRate=Bank%>%
group_by(month) %>%
summarize(subscription_rate = sum(y == "yes") /n() * 100)
Bank=read.csv("~/Desktop/SFSU/math449Project/bank.csv",header=TRUE,sep=";")
# Convert the month column to a factor with the desired order
Bank$month=factor(Bank$month,levels=c("jan","feb","mar","apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec"))
# Sort the dataframe by the month column
Bank <- Bank[order_by(Bank,-month),]
# Convert the month column to a factor with the desired order
Bank$month=factor(Bank$month,levels=c("jan","feb","mar","apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec"))
# Sort the dataframe by the month column
Bank <- Bank[order(Bank$month),]
# Reset the row names
row.names(Bank) <- NULL
# Calculate the subscription rate
bankSubscriptionRate=Bank%>%
group_by(month) %>%
summarize(subscription_rate = sum(y == "yes") /n() * 100)
Bank$month
# Calculate the subscription rate
bankSubscriptionRate=Bank%>%
group_by(month) %>%
summarize(subscription_rate = sum(y == "yes") /n() * 100)
bankSubscriptionRate
#Scatter plot to visualize the relationship between age and y
ggplot(bankSubscriptionRate, aes(x = month, y = subscription_rate)) +
geom_line() +
xlab("Month") +
ylab("Subscription Rate (%)") +
ggtitle("Subscription Rate Over Time")
bankSubscriptionRate=data.frame(bankSubscriptionRate)
bankSubscriptionRate
#Scatter plot to visualize the relationship between age and y
ggplot(bankSubscriptionRate, aes(x = month, y = subscription_rate)) +
geom_line() +
xlab("Month") +
ylab("Subscription Rate (%)") +
ggtitle("Subscription Rate Over Time")
#Scatter plot to visualize the relationship between age and y
ggplot(bankSubscriptionRate, aes(x = month, y = subscription_rate)) +
geom_point() +
xlab("Month") +
ylab("Subscription Rate (%)") +
ggtitle("Subscription Rate Over Time")
